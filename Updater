const { MessageType } = require('@adiwajshing/baileys');

// Set to store the users whose statuses have been replied to
const repliedStatusUsers = new Set();

// Auto reactions with emojis and auto status reply
const autoReactAndReply = async (message) => {
  try {
    // ... (rest of the autoReactAndReply function from the previous code)

    // Your existing code below this line...
  } catch (error) {
    console.error('Error in autoReactAndReply:', error);
  }
};

// Command to toggle auto reaction
let autoReactionEnabled = true; // Flag to indicate if auto reaction is enabled

client.on('message', async (message) => {
  try {
    // ... (rest of the ATR command from the previous code)

    // Your existing code below this line...
  } catch (error) {
    console.error('Error in ATR command:', error);
  }
});

// Combining with the new code provided
const simpleGit = require('simple-git');
const git = simpleGit();
const { Module } = require('../main');
const { MessageType } = require('@adiwajshing/baileys');
const Config = require('../config');
const exec = require('child_process').exec;
const Heroku = require('heroku-client');
const { PassThrough } = require('stream');
const heroku = new Heroku({ token: Config.HEROKU.API_KEY });

Module(
  {
    pattern: 'update check$',
    fromMe: true,
    dontAddCommandList: true,
    desc: 'Checks bot updates',
  },
  async (message, match) => {
    await git.fetch();
    var commits = await git.log(['main' + '..origin/' + 'main']);
    if (commits.total === 0) {
      await message.client.sendMessage(message.jid, { text: 'Bot up to date' });
    } else {
      var degisiklikler = 'Updates are available\n';
      commits['all'].map((commit) => {
        degisiklikler +=
          '(' +
          commit.date.substring(0, 10) +
          ') : *' +
          commit.message.replace('Update', 'Fixed').replace('.js', '') +
          '*\n';
      });
    }
  }
);

// Start the bot
client.connect();
